version: "3.8"
services:

  traefik:
    profiles: [ "extra" ]

  frontend:
    profiles: [ "extra" ]

  backend:
    restart: on-failure
    profiles: [ "main" ]
    container_name: cto_backend
    volumes:
      - ./.cache:/app/data
      - ./.cache/media:/app/media
      - '${PROJECT_PATH-.}/environment:/app/config'
    networks:
      - traefik-public
    environment:
      - CONFIG_ENV=devdocker

  porter:
    profiles: [ "main" ]
    container_name: cto_porter
    environment:
      - CONFIG_ENV=devdocker

  loginput:
    profiles: [ "main" ]
    container_name: cto_loginput

  db:
    container_name: cto_db
    profiles: [ "main", "db" ]

  rabbitmq:
    container_name: cto_rabbitmq
    profiles: [ "main", "mq" ]

  cache:
    container_name: cto_cache
    profiles: [ "main", "cache" ]

  fluentd:
    profiles: [ "main" ]
    build:
      context: ./dockerfiles/fluentd_cto
      dockerfile: Dockerfile
    container_name: fluend-cto
    networks:
      - traefik-public
    environment:
      FLUENTD_HTTP_DUMP_ENDPOINT: 'http://cto_loginput:8900/api/loginput/fluentd'
      FLUENTD_HOSTNAME: 'stag.nftgallerydev.online'
      FLUENTD_CTO_PROJECT_TOKEN: 'pJUIUOQfkMRJrtfNjFXKxUjnEmgsVBmaDGRcLFgTqyKktKgK'
      FLUENTD_CTO_PROJECT_NAME: 'c8751840-629e-40ea-8cf5-c9d331f5444c'
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  flooder:
    profiles: [ "main" ]
    entrypoint: [ "bash", "/entrypoint.local.sh" ]
    ports:
      - 8000:8000
    environment:
      - SERVER_NAME=stag.nftgallerydev.online
      - SERVER_HOST=https://stag.nftgallerydev.online/
      - LOCAL_SETUP=false
    build:
      context: ./test/backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: 'false'
        BUILDKIT_INLINE_CACHE: 1
    networks:
      - traefik-public
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: docker.efk.flooder-logger
        fluentd-async-connect: "true"

  pgweb:
    profiles: [ "main", "db" ]
    networks:
      - traefik-public
    container_name: pgweb
    image: sosedoff/pgweb
    ports:
      - '8081:8081'
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER?Variable not
        set}:${POSTGRES_PASSWORD?Variable not
        set}@cto_db:5432/${POSTGRES_DB?Variable not set}?sslmode=disable

volumes:
  cto-data:
    external: false
