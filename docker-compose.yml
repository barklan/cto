version: "3.7"
services:

  traefik:
    image: traefik:2.5.3
    restart: always
    ports:
      - '80:80'
      - '443:443'
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-public-certificates:/certificates
    command:
      - --providers.docker
      - --providers.docker.watch=true
      - --providers.docker.constraints=Label(`traefik.constraint-label`,
        `traefik-public`)
      - --providers.docker.exposedbydefault=false
      # - --providers.docker.swarmmode
      - --entrypoints.http.address=:80
      # TLS
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=qufiwefefwoyn@gmail.com
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
    env_file:
      - .env
    # deploy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.http.routers.traefik-public-http.rule=Host(`traefik.${DOMAIN?Variable
        not set}`)
      - traefik.http.routers.traefik-public-http.entrypoints=http
      - traefik.http.routers.traefik-public-http.middlewares=https-redirect
      - traefik.http.routers.traefik-public-https.rule=Host(`traefik.${DOMAIN?Variable
        not set}`)
      - traefik.http.routers.traefik-public-https.entrypoints=https
      - traefik.http.routers.traefik-public-https.tls=true
      - traefik.http.routers.traefik-public-https.service=api@internal
      - traefik.http.routers.traefik-public-https.tls.certresolver=le
      - traefik.http.services.traefik-public.loadbalancer.server.port=8080
      # Auth
      - traefik.http.middlewares.docsauth.basicauth.usersfile=basicauth/docs
      - traefik.http.middlewares.adminauth.basicauth.usersfile=basicauth/admin
      - traefik.http.routers.traefik-public-http.middlewares=adminauth
      - traefik.http.routers.traefik-public-https.middlewares=adminauth

  frontend:
    image: barklan/cto-explorer:rolling
    ports:
      - 3333:3333
    networks:
      - traefik-public
    # deploy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.frontend-http.rule=Host(`${DOMAIN?Variable not
        set}`) && PathPrefix(`/`) && !PathPrefix(`/api/`)
      - traefik.http.routers.frontend-http.entrypoints=http
      - traefik.http.services.frontend.loadbalancer.server.port=80
      # TLS
      - traefik.http.routers.frontend-http.middlewares=https-redirect
      - traefik.http.routers.frontend-https.rule=Host(`${DOMAIN?Variable not
        set}`) && PathPrefix(`/`) && !PathPrefix(`/api/`)
      - traefik.http.routers.frontend-https.entrypoints=https
      - traefik.http.routers.frontend-https.tls=true
      - traefik.http.routers.frontend-https.tls.certresolver=le

  backend:
    image: barklan/gitlab-workflow-bot:rolling
    # env_file:
    # - ./environment/.env
    restart: on-failure
    ports:
      - 8080:8080
      - 50051:50051
    networks:
      - traefik-public
    volumes:
      - cto-data:/app/data
      - .cache/media:/app/media
      - ./environment:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # CONFIG_ENV should be one of "dev", "devdocker", "prod"
      - CONFIG_ENV=prod
    # deploy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.routers.backend-http.rule=Host(`${DOMAIN?Variable not
        set}`) && (PathPrefix(`/api/`))
      - traefik.http.routers.backend-http.entrypoints=http
      - traefik.http.routers.backend-http.middlewares=https-redirect
      - traefik.http.routers.backend-https.rule=Host(`${DOMAIN?Variable not
        set}`) && (PathPrefix(`/api/`))
      - traefik.http.routers.backend-https.entrypoints=https
      - traefik.http.routers.backend-https.tls=true
      - traefik.http.routers.backend-https.tls.certresolver=le
      - traefik.http.services.backend.loadbalancer.server.port=8080
      # Docs
      - traefik.http.routers.backend-docs-http.rule=Host(`${DOMAIN?Variable not
        set}`) && PathPrefix(`/docs`) || PathPrefix(`/redoc`) ||
        PathPrefix(`/api/v1/openapi.json`)
      - traefik.http.routers.backend-docs-http.entrypoints=http
      - traefik.http.routers.backend-docs-http.middlewares=https-redirect
      - traefik.http.routers.backend-docs-https.rule=Host(`${DOMAIN?Variable not
        set}`) && PathPrefix(`/docs`) || PathPrefix(`/redoc`) ||
        PathPrefix(`/api/v1/openapi.json`)
      - traefik.http.routers.backend-docs-https.entrypoints=https
      - traefik.http.routers.backend-docs-https.tls=true
      - traefik.http.routers.backend-docs-https.tls.certresolver=le
      - traefik.http.routers.backend-docs-http.middlewares=docsauth
      - traefik.http.routers.backend-docs-https.middlewares=docsauth

volumes:
  traefik-public-certificates: null
  cto-data:
    external: true

networks:
  traefik-public: null # external: true
