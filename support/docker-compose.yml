version: "3.7"
services:
  fluentd:
    # `bash run.sh registry:refresh` to build and push internal fluentd
    image: barklan/fluentd-cto:2.2.1
    env_file:
      ./.env
    ports:
      - 24224:24224
      - 24224:24224/udp
    user: root
    networks:
      - traefik-public
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  pgweb:
    image: 'sosedoff/pgweb'
    networks:
      - traefik-public
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER?Variable not
        set}:${POSTGRES_PASSWORD?Variable not set}@cto_db:5432/${POSTGRES_DB?Variable not set}?sslmode=disable
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.pgweb-http.rule=Host(`pgweb.${DOMAIN?Variable not
          set}`)
        - traefik.http.routers.pgweb-http.entrypoints=http
        - traefik.http.routers.pgweb-http.middlewares=https-redirect
        - traefik.http.routers.pgweb-https.rule=Host(`pgweb.${DOMAIN?Variable
          not set}`)
        - traefik.http.routers.pgweb-https.entrypoints=https
        - traefik.http.routers.pgweb-https.tls=true
        - traefik.http.routers.pgweb-https.tls.certresolver=le
        - traefik.http.services.pgweb.loadbalancer.server.port=8081
        # Auth
        - traefik.http.routers.pgweb-http.middlewares=adminauth
        - traefik.http.routers.pgweb-https.middlewares=adminauth

volumes:
  erdapp-volume: null
networks:
  traefik-public:
    external: true
